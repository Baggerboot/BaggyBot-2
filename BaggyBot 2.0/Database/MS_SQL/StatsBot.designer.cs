#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BaggyBot.Database.MS_SQL
{
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="stats_bot")]
	public partial class StatsBotDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUserCredentials(UserCredentials instance);
    partial void UpdateUserCredentials(UserCredentials instance);
    partial void DeleteUserCredentials(UserCredentials instance);
    partial void InsertUserStatistics(UserStatistics instance);
    partial void UpdateUserStatistics(UserStatistics instance);
    partial void DeleteUserStatistics(UserStatistics instance);
    partial void InsertWord(Word instance);
    partial void UpdateWord(Word instance);
    partial void DeleteWord(Word instance);
    partial void InsertEmoticon(Emoticon instance);
    partial void UpdateEmoticon(Emoticon instance);
    partial void DeleteEmoticon(Emoticon instance);
    partial void InsertName(Name instance);
    partial void UpdateName(Name instance);
    partial void DeleteName(Name instance);
    partial void InsertQuote(Quote instance);
    partial void UpdateQuote(Quote instance);
    partial void DeleteQuote(Quote instance);
    partial void InsertUrl(Url instance);
    partial void UpdateUrl(Url instance);
    partial void DeleteUrl(Url instance);
    partial void InsertKeyValuePair(KeyValuePair instance);
    partial void UpdateKeyValuePair(KeyValuePair instance);
    partial void DeleteKeyValuePair(KeyValuePair instance);
    #endregion
		
		public StatsBotDataContext() : 
				base(global::BaggyBot.Properties.Settings.Default.stats_botConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StatsBotDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatsBotDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatsBotDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatsBotDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UserCredentials> UserCredentials
		{
			get
			{
				return this.GetTable<UserCredentials>();
			}
		}
		
		public System.Data.Linq.Table<UserStatistics> UserStatistics
		{
			get
			{
				return this.GetTable<UserStatistics>();
			}
		}
		
		public System.Data.Linq.Table<Word> Words
		{
			get
			{
				return this.GetTable<Word>();
			}
		}
		
		public System.Data.Linq.Table<Emoticon> Emoticons
		{
			get
			{
				return this.GetTable<Emoticon>();
			}
		}
		
		public System.Data.Linq.Table<Name> Names
		{
			get
			{
				return this.GetTable<Name>();
			}
		}
		
		public System.Data.Linq.Table<Quote> Quotes
		{
			get
			{
				return this.GetTable<Quote>();
			}
		}
		
		public System.Data.Linq.Table<Url> Urls
		{
			get
			{
				return this.GetTable<Url>();
			}
		}
		
		public System.Data.Linq.Table<KeyValuePair> KeyValuePairs
		{
			get
			{
				return this.GetTable<KeyValuePair>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usercreds")]
	public partial class UserCredentials : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _user_id;
		
		private string _nick;
		
		private string _ident;
		
		private string _hostmask;
		
		private string _ns_login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnnickChanging(string value);
    partial void OnnickChanged();
    partial void OnidentChanging(string value);
    partial void OnidentChanged();
    partial void OnhostmaskChanging(string value);
    partial void OnhostmaskChanged();
    partial void Onns_loginChanging(string value);
    partial void Onns_loginChanged();
    #endregion
		
		public UserCredentials()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nick", DbType="NVarChar(45) NOT NULL", CanBeNull=false)]
		public string nick
		{
			get
			{
				return this._nick;
			}
			set
			{
				if ((this._nick != value))
				{
					this.OnnickChanging(value);
					this.SendPropertyChanging();
					this._nick = value;
					this.SendPropertyChanged("nick");
					this.OnnickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ident", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string ident
		{
			get
			{
				return this._ident;
			}
			set
			{
				if ((this._ident != value))
				{
					this.OnidentChanging(value);
					this.SendPropertyChanging();
					this._ident = value;
					this.SendPropertyChanged("ident");
					this.OnidentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostmask", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string hostmask
		{
			get
			{
				return this._hostmask;
			}
			set
			{
				if ((this._hostmask != value))
				{
					this.OnhostmaskChanging(value);
					this.SendPropertyChanging();
					this._hostmask = value;
					this.SendPropertyChanged("hostmask");
					this.OnhostmaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ns_login", DbType="NVarChar(45)")]
		public string ns_login
		{
			get
			{
				return this._ns_login;
			}
			set
			{
				if ((this._ns_login != value))
				{
					this.Onns_loginChanging(value);
					this.SendPropertyChanging();
					this._ns_login = value;
					this.SendPropertyChanged("ns_login");
					this.Onns_loginChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userstats")]
	public partial class UserStatistics : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private int _lines;
		
		private int _words;
		
		private int _actions;
		
		private int _profanities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnlinesChanging(int value);
    partial void OnlinesChanged();
    partial void OnwordsChanging(int value);
    partial void OnwordsChanged();
    partial void OnactionsChanging(int value);
    partial void OnactionsChanged();
    partial void OnprofanitiesChanging(int value);
    partial void OnprofanitiesChanged();
    #endregion
		
		public UserStatistics()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lines", DbType="Int NOT NULL")]
		public int lines
		{
			get
			{
				return this._lines;
			}
			set
			{
				if ((this._lines != value))
				{
					this.OnlinesChanging(value);
					this.SendPropertyChanging();
					this._lines = value;
					this.SendPropertyChanged("lines");
					this.OnlinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_words", DbType="Int NOT NULL")]
		public int words
		{
			get
			{
				return this._words;
			}
			set
			{
				if ((this._words != value))
				{
					this.OnwordsChanging(value);
					this.SendPropertyChanging();
					this._words = value;
					this.SendPropertyChanged("words");
					this.OnwordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actions", DbType="Int NOT NULL")]
		public int actions
		{
			get
			{
				return this._actions;
			}
			set
			{
				if ((this._actions != value))
				{
					this.OnactionsChanging(value);
					this.SendPropertyChanging();
					this._actions = value;
					this.SendPropertyChanged("actions");
					this.OnactionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profanities", DbType="Int NOT NULL")]
		public int profanities
		{
			get
			{
				return this._profanities;
			}
			set
			{
				if ((this._profanities != value))
				{
					this.OnprofanitiesChanging(value);
					this.SendPropertyChanging();
					this._profanities = value;
					this.SendPropertyChanged("profanities");
					this.OnprofanitiesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.words")]
	public partial class Word : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _word1;
		
		private int _uses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onword1Changing(string value);
    partial void Onword1Changed();
    partial void OnusesChanging(int value);
    partial void OnusesChanged();
    #endregion
		
		public Word()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="word", Storage="_word1", DbType="NVarChar(220) NOT NULL", CanBeNull=false)]
		public string word1
		{
			get
			{
				return this._word1;
			}
			set
			{
				if ((this._word1 != value))
				{
					this.Onword1Changing(value);
					this.SendPropertyChanging();
					this._word1 = value;
					this.SendPropertyChanged("word1");
					this.Onword1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uses", DbType="Int NOT NULL")]
		public int uses
		{
			get
			{
				return this._uses;
			}
			set
			{
				if ((this._uses != value))
				{
					this.OnusesChanging(value);
					this.SendPropertyChanging();
					this._uses = value;
					this.SendPropertyChanged("uses");
					this.OnusesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.emoticons")]
	public partial class Emoticon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _emoticon1;
		
		private int _uses;
		
		private int _last_used_by;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onemoticon1Changing(string value);
    partial void Onemoticon1Changed();
    partial void OnusesChanging(int value);
    partial void OnusesChanged();
    partial void Onlast_used_byChanging(int value);
    partial void Onlast_used_byChanged();
    #endregion
		
		public Emoticon()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="emoticon", Storage="_emoticon1", DbType="NVarChar(45) NOT NULL", CanBeNull=false)]
		public string emoticon1
		{
			get
			{
				return this._emoticon1;
			}
			set
			{
				if ((this._emoticon1 != value))
				{
					this.Onemoticon1Changing(value);
					this.SendPropertyChanging();
					this._emoticon1 = value;
					this.SendPropertyChanged("emoticon1");
					this.Onemoticon1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uses", DbType="Int NOT NULL")]
		public int uses
		{
			get
			{
				return this._uses;
			}
			set
			{
				if ((this._uses != value))
				{
					this.OnusesChanging(value);
					this.SendPropertyChanging();
					this._uses = value;
					this.SendPropertyChanged("uses");
					this.OnusesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_used_by", DbType="Int NOT NULL")]
		public int last_used_by
		{
			get
			{
				return this._last_used_by;
			}
			set
			{
				if ((this._last_used_by != value))
				{
					this.Onlast_used_byChanging(value);
					this.SendPropertyChanging();
					this._last_used_by = value;
					this.SendPropertyChanged("last_used_by");
					this.Onlast_used_byChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.names")]
	public partial class Name : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _name1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onname1Changing(string value);
    partial void Onname1Changed();
    #endregion
		
		public Name()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_name1", DbType="NVarChar(90) NOT NULL", CanBeNull=false)]
		public string name1
		{
			get
			{
				return this._name1;
			}
			set
			{
				if ((this._name1 != value))
				{
					this.Onname1Changing(value);
					this.SendPropertyChanging();
					this._name1 = value;
					this.SendPropertyChanged("name1");
					this.Onname1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.quotes")]
	public partial class Quote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _user_id;
		
		private string _quote1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onquote1Changing(string value);
    partial void Onquote1Changed();
    #endregion
		
		public Quote()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="quote", Storage="_quote1", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string quote1
		{
			get
			{
				return this._quote1;
			}
			set
			{
				if ((this._quote1 != value))
				{
					this.Onquote1Changing(value);
					this.SendPropertyChanging();
					this._quote1 = value;
					this.SendPropertyChanged("quote1");
					this.Onquote1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.urls")]
	public partial class Url : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _url1;
		
		private int _uses;
		
		private int _last_used_by;
		
		private string _last_usage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onurl1Changing(string value);
    partial void Onurl1Changed();
    partial void OnusesChanging(int value);
    partial void OnusesChanged();
    partial void Onlast_used_byChanging(int value);
    partial void Onlast_used_byChanged();
    partial void Onlast_usageChanging(string value);
    partial void Onlast_usageChanged();
    #endregion
		
		public Url()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="url", Storage="_url1", DbType="NVarChar(220) NOT NULL", CanBeNull=false)]
		public string url1
		{
			get
			{
				return this._url1;
			}
			set
			{
				if ((this._url1 != value))
				{
					this.Onurl1Changing(value);
					this.SendPropertyChanging();
					this._url1 = value;
					this.SendPropertyChanged("url1");
					this.Onurl1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uses", DbType="Int NOT NULL")]
		public int uses
		{
			get
			{
				return this._uses;
			}
			set
			{
				if ((this._uses != value))
				{
					this.OnusesChanging(value);
					this.SendPropertyChanging();
					this._uses = value;
					this.SendPropertyChanged("uses");
					this.OnusesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_used_by", DbType="Int NOT NULL")]
		public int last_used_by
		{
			get
			{
				return this._last_used_by;
			}
			set
			{
				if ((this._last_used_by != value))
				{
					this.Onlast_used_byChanging(value);
					this.SendPropertyChanging();
					this._last_used_by = value;
					this.SendPropertyChanged("last_used_by");
					this.Onlast_used_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_usage", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string last_usage
		{
			get
			{
				return this._last_usage;
			}
			set
			{
				if ((this._last_usage != value))
				{
					this.Onlast_usageChanging(value);
					this.SendPropertyChanging();
					this._last_usage = value;
					this.SendPropertyChanged("last_usage");
					this.Onlast_usageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[var]")]
	public partial class KeyValuePair : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _key;
		
		private int _value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnkeyChanging(string value);
    partial void OnkeyChanged();
    partial void OnvalueChanging(int value);
    partial void OnvalueChanged();
    #endregion
		
		public KeyValuePair()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[key]", Storage="_key", DbType="NVarChar(45) NOT NULL", CanBeNull=false)]
		public string key
		{
			get
			{
				return this._key;
			}
			set
			{
				if ((this._key != value))
				{
					this.OnkeyChanging(value);
					this.SendPropertyChanging();
					this._key = value;
					this.SendPropertyChanged("key");
					this.OnkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Int NOT NULL")]
		public int value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
